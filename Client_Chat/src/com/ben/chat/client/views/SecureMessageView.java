/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SecureMessageView.java
 *
 * Created on Nov 15, 2009, 1:28:47 PM
 */
package com.ben.chat.client.views;

import com.ben.chat.client.ErrorLogger.ErrorLogger;
import com.ben.chat.client.constant.ChatConstants;
import com.ben.crypt.rsa.RSA;
import java.security.KeyPair;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author benoitdaccache
 */
public class SecureMessageView extends javax.swing.JFrame {

    private ClientChatView cv;
    private PublicKey publicKey;
    private String destUsername;
    private KeyPair key;

    /** Creates new form SecureMessageView */
    public SecureMessageView(String destUsername) {
        initComponents();
        this.setVisible(true);
        this.cv = ClientChatView.getInstance();
        this.destUsername = destUsername;
    }

    public void startSecuredChat() {
        try {
            appendToLog("Initializing encryption\n");
            appendToLog("generating key...\nsending public key\nwaiting for pear public key");
            key = RSA.generateKey();
            cv.sendInt(ChatConstants.PUBLIC_KEY);
            cv.sendText(destUsername);
            cv.sendObject(key.getPublic());
        } catch (NoSuchAlgorithmException ex) {
            ErrorLogger.getLogger().logError("", ex);
        }
    }

    public void initializeEncryption() {
        try {
            appendToLog("Initializing encryption\n");
            cv.sendInt(ChatConstants.PUBLIC_KEY_REQUEST);
            cv.sendText(destUsername);
            appendToLog("generating key...\nsending public key...\nwaiting for pear's public key...\n");
            key = RSA.generateKey();
            cv.sendInt(ChatConstants.PUBLIC_KEY);
            cv.sendText(destUsername);
            cv.sendObject(key.getPublic());
        } catch (NoSuchAlgorithmException ex) {
            ErrorLogger.getLogger().logError("", ex);
        }
    }

    void setPublicKey(Object obj) {
        this.publicKey = (PublicKey) obj;
        appendToLog("Public key received\n");
        sendButton.setEnabled(true);
    }

    private void appendToLog(String text) {
        logPane.setText(logPane.getText() + text);
        logPane.setCaretPosition(logPane.getText().length());
    }

    private void appendToChat(String text) {
        secureChatPAne.setText(secureChatPAne.getText() + text);
        secureChatPAne.setCaretPosition(secureChatPAne.getText().length());
    }

    void showCryptedConv(String crypted) {
        this.setVisible(true);
        byte[] decrypted = null;
        try {
            appendToLog("Crypted message received\ndecrypting...");
            decrypted = RSA.decrypt(crypted.getBytes(), key.getPrivate());
        } catch (Exception ex) {
            Logger.getLogger(SecureMessageView.class.getName()).log(Level.SEVERE, null, ex);
        }
        appendToChat(destUsername + " Said :\n" + new String(decrypted) + "\n");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        secureChatPAne = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        sendPAne = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        logPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        sendButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        secureChatPAne.setEditable(false);
        secureChatPAne.setName("secureChatPAne"); // NOI18N
        jScrollPane1.setViewportView(secureChatPAne);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        sendPAne.setColumns(20);
        sendPAne.setRows(5);
        sendPAne.setName("sendPAne"); // NOI18N
        sendPAne.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sendPAneKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(sendPAne);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        logPane.setEnabled(false);
        logPane.setName("logPane"); // NOI18N
        jScrollPane3.setViewportView(logPane);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.ben.chat.client.views.ClientChatApp.class).getContext().getResourceMap(SecureMessageView.class);
        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        sendButton.setText(resourceMap.getString("sendButton.text")); // NOI18N
        sendButton.setEnabled(false);
        sendButton.setName("sendButton"); // NOI18N
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        if (!sendPAne.getText().equals("")) {
            try {
                byte[] crypted = RSA.encrypt(sendPAne.getText().getBytes(), publicKey);
                cv.sendInt(ChatConstants.SECURE_CONV);
                cv.sendText(destUsername);
                cv.sendText(new String(crypted));
                appendToChat("You said:\n" + sendPAne.getText() + "\n");
                sendPAne.setText("");
            } catch (Exception ex) {
                ErrorLogger.getLogger().logError("", ex);
            }

        }

    }//GEN-LAST:event_sendButtonActionPerformed

    private void sendPAneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendPAneKeyTyped
        if (evt.getKeyChar() == 10) {
            sendPAne.setText(sendPAne.getText().replace("\n", ""));
            sendButtonActionPerformed(null);
        }
    }//GEN-LAST:event_sendPAneKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane logPane;
    private javax.swing.JTextPane secureChatPAne;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextArea sendPAne;
    // End of variables declaration//GEN-END:variables
}
